vendor_name = ModelSim
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/winner.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/LFSR.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/DE1_SoC.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/doubleFlipFlop.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/userInput.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/compButton.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/centerLight.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/normalLight.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/comparator.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/clock_divider.sv
source_file = 1, C:/Users/egeen/Desktop/School/EE 271/Projects/lab5/db/DE1_SoC.cbx.xml
design_name = DE1_SoC
instance = comp, \HEX0[0]~output , HEX0[0]~output, DE1_SoC, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, DE1_SoC, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, DE1_SoC, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, DE1_SoC, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, DE1_SoC, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, DE1_SoC, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, DE1_SoC, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, DE1_SoC, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, DE1_SoC, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, DE1_SoC, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, DE1_SoC, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, DE1_SoC, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, DE1_SoC, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, DE1_SoC, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, DE1_SoC, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, DE1_SoC, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, DE1_SoC, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, DE1_SoC, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, DE1_SoC, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, DE1_SoC, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, DE1_SoC, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, DE1_SoC, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, DE1_SoC, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, DE1_SoC, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, DE1_SoC, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, DE1_SoC, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, DE1_SoC, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, DE1_SoC, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, DE1_SoC, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, DE1_SoC, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, DE1_SoC, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, DE1_SoC, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, DE1_SoC, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, DE1_SoC, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, DE1_SoC, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, DE1_SoC, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, DE1_SoC, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, DE1_SoC, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, DE1_SoC, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, DE1_SoC, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, DE1_SoC, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, DE1_SoC, 1
instance = comp, \LEDR[0]~output , LEDR[0]~output, DE1_SoC, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, DE1_SoC, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, DE1_SoC, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, DE1_SoC, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, DE1_SoC, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, DE1_SoC, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, DE1_SoC, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, DE1_SoC, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, DE1_SoC, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, DE1_SoC, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, DE1_SoC, 1
instance = comp, \CLOCK_50~inputCLKENA0 , CLOCK_50~inputCLKENA0, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0]~0 , cdiv|divided_clocks[0]~0, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0] , cdiv|divided_clocks[0], DE1_SoC, 1
instance = comp, \cdiv|Add0~57 , cdiv|Add0~57, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[1] , cdiv|divided_clocks[1], DE1_SoC, 1
instance = comp, \cdiv|Add0~53 , cdiv|Add0~53, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[2] , cdiv|divided_clocks[2], DE1_SoC, 1
instance = comp, \cdiv|Add0~49 , cdiv|Add0~49, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[3] , cdiv|divided_clocks[3], DE1_SoC, 1
instance = comp, \cdiv|Add0~45 , cdiv|Add0~45, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[4] , cdiv|divided_clocks[4], DE1_SoC, 1
instance = comp, \cdiv|Add0~41 , cdiv|Add0~41, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[5] , cdiv|divided_clocks[5], DE1_SoC, 1
instance = comp, \cdiv|Add0~37 , cdiv|Add0~37, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[6] , cdiv|divided_clocks[6], DE1_SoC, 1
instance = comp, \cdiv|Add0~33 , cdiv|Add0~33, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[7] , cdiv|divided_clocks[7], DE1_SoC, 1
instance = comp, \cdiv|Add0~29 , cdiv|Add0~29, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[8] , cdiv|divided_clocks[8], DE1_SoC, 1
instance = comp, \cdiv|Add0~25 , cdiv|Add0~25, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[9] , cdiv|divided_clocks[9], DE1_SoC, 1
instance = comp, \cdiv|Add0~21 , cdiv|Add0~21, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[10] , cdiv|divided_clocks[10], DE1_SoC, 1
instance = comp, \cdiv|Add0~17 , cdiv|Add0~17, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[11] , cdiv|divided_clocks[11], DE1_SoC, 1
instance = comp, \cdiv|Add0~13 , cdiv|Add0~13, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[12] , cdiv|divided_clocks[12], DE1_SoC, 1
instance = comp, \cdiv|Add0~9 , cdiv|Add0~9, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[13] , cdiv|divided_clocks[13], DE1_SoC, 1
instance = comp, \cdiv|Add0~5 , cdiv|Add0~5, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[14] , cdiv|divided_clocks[14], DE1_SoC, 1
instance = comp, \cdiv|Add0~1 , cdiv|Add0~1, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[15] , cdiv|divided_clocks[15], DE1_SoC, 1
instance = comp, \SW[9]~input , SW[9]~input, DE1_SoC, 1
instance = comp, \random|Q[8]~feeder , random|Q[8]~feeder, DE1_SoC, 1
instance = comp, \random|Q[8] , random|Q[8], DE1_SoC, 1
instance = comp, \random|Q[7] , random|Q[7], DE1_SoC, 1
instance = comp, \random|Q[6] , random|Q[6], DE1_SoC, 1
instance = comp, \random|Q[5] , random|Q[5], DE1_SoC, 1
instance = comp, \random|Q[4] , random|Q[4], DE1_SoC, 1
instance = comp, \random|Q[3] , random|Q[3], DE1_SoC, 1
instance = comp, \random|Q[2] , random|Q[2], DE1_SoC, 1
instance = comp, \random|Q[1]~feeder , random|Q[1]~feeder, DE1_SoC, 1
instance = comp, \random|Q[1] , random|Q[1], DE1_SoC, 1
instance = comp, \random|Q[0] , random|Q[0], DE1_SoC, 1
instance = comp, \random|xnor_out , random|xnor_out, DE1_SoC, 1
instance = comp, \random|Q[9] , random|Q[9], DE1_SoC, 1
instance = comp, \SW[8]~input , SW[8]~input, DE1_SoC, 1
instance = comp, \SW[2]~input , SW[2]~input, DE1_SoC, 1
instance = comp, \SW[3]~input , SW[3]~input, DE1_SoC, 1
instance = comp, \SW[1]~input , SW[1]~input, DE1_SoC, 1
instance = comp, \SW[0]~input , SW[0]~input, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~0 , comp|computer|LessThan0~0, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~1 , comp|computer|LessThan0~1, DE1_SoC, 1
instance = comp, \SW[5]~input , SW[5]~input, DE1_SoC, 1
instance = comp, \SW[7]~input , SW[7]~input, DE1_SoC, 1
instance = comp, \SW[6]~input , SW[6]~input, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~4 , comp|computer|LessThan0~4, DE1_SoC, 1
instance = comp, \SW[4]~input , SW[4]~input, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~2 , comp|computer|LessThan0~2, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~5 , comp|computer|LessThan0~5, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~3 , comp|computer|LessThan0~3, DE1_SoC, 1
instance = comp, \comp|computer|LessThan0~6 , comp|computer|LessThan0~6, DE1_SoC, 1
instance = comp, \comp|computer|value_final , comp|computer|value_final, DE1_SoC, 1
instance = comp, \flipFlop2|out_ff1 , flipFlop2|out_ff1, DE1_SoC, 1
instance = comp, \flipFlop2|out , flipFlop2|out, DE1_SoC, 1
instance = comp, \computer|ps~0 , computer|ps~0, DE1_SoC, 1
instance = comp, \computer|ps[0] , computer|ps[0], DE1_SoC, 1
instance = comp, \KEY[0]~input , KEY[0]~input, DE1_SoC, 1
instance = comp, \flipFlop1|out_ff1~0 , flipFlop1|out_ff1~0, DE1_SoC, 1
instance = comp, \flipFlop1|out_ff1 , flipFlop1|out_ff1, DE1_SoC, 1
instance = comp, \flipFlop1|out , flipFlop1|out, DE1_SoC, 1
instance = comp, \human|ps~0 , human|ps~0, DE1_SoC, 1
instance = comp, \human|ps[0] , human|ps[0], DE1_SoC, 1
instance = comp, \winnerFound|restart , winnerFound|restart, DE1_SoC, 1
instance = comp, \human|out , human|out, DE1_SoC, 1
instance = comp, \computer|out , computer|out, DE1_SoC, 1
instance = comp, \L2|ps~1 , L2|ps~1, DE1_SoC, 1
instance = comp, \L1|ps~0 , L1|ps~0, DE1_SoC, 1
instance = comp, \L1|ps[0] , L1|ps[0], DE1_SoC, 1
instance = comp, \L2|ps~0 , L2|ps~0, DE1_SoC, 1
instance = comp, \L2|ps~2 , L2|ps~2, DE1_SoC, 1
instance = comp, \L2|ps[0] , L2|ps[0], DE1_SoC, 1
instance = comp, \L3|ps~0 , L3|ps~0, DE1_SoC, 1
instance = comp, \L3|ps~1 , L3|ps~1, DE1_SoC, 1
instance = comp, \L3|ps~2 , L3|ps~2, DE1_SoC, 1
instance = comp, \L3|ps[0] , L3|ps[0], DE1_SoC, 1
instance = comp, \L4|ps~0 , L4|ps~0, DE1_SoC, 1
instance = comp, \L4|ps~1 , L4|ps~1, DE1_SoC, 1
instance = comp, \L4|ps~2 , L4|ps~2, DE1_SoC, 1
instance = comp, \L4|ps[0] , L4|ps[0], DE1_SoC, 1
instance = comp, \L5|ps~0 , L5|ps~0, DE1_SoC, 1
instance = comp, \L5|ps~1 , L5|ps~1, DE1_SoC, 1
instance = comp, \L5|ps[0] , L5|ps[0], DE1_SoC, 1
instance = comp, \L6|ps~0 , L6|ps~0, DE1_SoC, 1
instance = comp, \L6|ps~1 , L6|ps~1, DE1_SoC, 1
instance = comp, \L6|ps~2 , L6|ps~2, DE1_SoC, 1
instance = comp, \L6|ps[0] , L6|ps[0], DE1_SoC, 1
instance = comp, \L7|ps~0 , L7|ps~0, DE1_SoC, 1
instance = comp, \L7|ps~1 , L7|ps~1, DE1_SoC, 1
instance = comp, \L7|ps~2 , L7|ps~2, DE1_SoC, 1
instance = comp, \L7|ps[0] , L7|ps[0], DE1_SoC, 1
instance = comp, \L8|ps~0 , L8|ps~0, DE1_SoC, 1
instance = comp, \L8|ps~1 , L8|ps~1, DE1_SoC, 1
instance = comp, \L8|ps~2 , L8|ps~2, DE1_SoC, 1
instance = comp, \L8|ps[0] , L8|ps[0], DE1_SoC, 1
instance = comp, \L9|ps~0 , L9|ps~0, DE1_SoC, 1
instance = comp, \L9|ps[0] , L9|ps[0], DE1_SoC, 1
instance = comp, \winnerFound|ps~1 , winnerFound|ps~1, DE1_SoC, 1
instance = comp, \winnerFound|Lcount[0]~4 , winnerFound|Lcount[0]~4, DE1_SoC, 1
instance = comp, \winnerFound|Lcount[0] , winnerFound|Lcount[0], DE1_SoC, 1
instance = comp, \winnerFound|Lcount[1]~2 , winnerFound|Lcount[1]~2, DE1_SoC, 1
instance = comp, \winnerFound|Lcount[1] , winnerFound|Lcount[1], DE1_SoC, 1
instance = comp, \winnerFound|Equal10~2 , winnerFound|Equal10~2, DE1_SoC, 1
instance = comp, \winnerFound|Lcount[2]~3 , winnerFound|Lcount[2]~3, DE1_SoC, 1
instance = comp, \winnerFound|Lcount[2] , winnerFound|Lcount[2], DE1_SoC, 1
instance = comp, \winnerFound|Equal10~1 , winnerFound|Equal10~1, DE1_SoC, 1
instance = comp, \winnerFound|ps~0 , winnerFound|ps~0, DE1_SoC, 1
instance = comp, \winnerFound|Equal3~1 , winnerFound|Equal3~1, DE1_SoC, 1
instance = comp, \winnerFound|Rcount[2]~1 , winnerFound|Rcount[2]~1, DE1_SoC, 1
instance = comp, \winnerFound|Rcount[2] , winnerFound|Rcount[2], DE1_SoC, 1
instance = comp, \winnerFound|Equal3~2 , winnerFound|Equal3~2, DE1_SoC, 1
instance = comp, \winnerFound|ps[0] , winnerFound|ps[0], DE1_SoC, 1
instance = comp, \winnerFound|ps~2 , winnerFound|ps~2, DE1_SoC, 1
instance = comp, \winnerFound|ps[1] , winnerFound|ps[1], DE1_SoC, 1
instance = comp, \winnerFound|always2~0 , winnerFound|always2~0, DE1_SoC, 1
instance = comp, \winnerFound|restart~DUPLICATE , winnerFound|restart~DUPLICATE, DE1_SoC, 1
instance = comp, \winnerFound|ps~3 , winnerFound|ps~3, DE1_SoC, 1
instance = comp, \winnerFound|ps[0]~DUPLICATE , winnerFound|ps[0]~DUPLICATE, DE1_SoC, 1
instance = comp, \winnerFound|Lcount[1]~0 , winnerFound|Lcount[1]~0, DE1_SoC, 1
instance = comp, \winnerFound|Rcount[0]~2 , winnerFound|Rcount[0]~2, DE1_SoC, 1
instance = comp, \winnerFound|Rcount[0] , winnerFound|Rcount[0], DE1_SoC, 1
instance = comp, \winnerFound|Lcount[1]~1 , winnerFound|Lcount[1]~1, DE1_SoC, 1
instance = comp, \winnerFound|Rcount[1]~0 , winnerFound|Rcount[1]~0, DE1_SoC, 1
instance = comp, \winnerFound|Rcount[1] , winnerFound|Rcount[1], DE1_SoC, 1
instance = comp, \winnerFound|HEX0~0 , winnerFound|HEX0~0, DE1_SoC, 1
instance = comp, \winnerFound|HEX0[1]~1 , winnerFound|HEX0[1]~1, DE1_SoC, 1
instance = comp, \winnerFound|Equal3~0 , winnerFound|Equal3~0, DE1_SoC, 1
instance = comp, \winnerFound|HEX0[3]~2 , winnerFound|HEX0[3]~2, DE1_SoC, 1
instance = comp, \winnerFound|HEX0[4]~3 , winnerFound|HEX0[4]~3, DE1_SoC, 1
instance = comp, \winnerFound|HEX0[5]~4 , winnerFound|HEX0[5]~4, DE1_SoC, 1
instance = comp, \winnerFound|HEX0[6]~5 , winnerFound|HEX0[6]~5, DE1_SoC, 1
instance = comp, \winnerFound|HEX5~0 , winnerFound|HEX5~0, DE1_SoC, 1
instance = comp, \winnerFound|HEX5[1]~1 , winnerFound|HEX5[1]~1, DE1_SoC, 1
instance = comp, \winnerFound|Equal10~0 , winnerFound|Equal10~0, DE1_SoC, 1
instance = comp, \winnerFound|HEX5[3]~2 , winnerFound|HEX5[3]~2, DE1_SoC, 1
instance = comp, \winnerFound|HEX5[4]~3 , winnerFound|HEX5[4]~3, DE1_SoC, 1
instance = comp, \winnerFound|HEX5[5]~4 , winnerFound|HEX5[5]~4, DE1_SoC, 1
instance = comp, \winnerFound|HEX5[6]~5 , winnerFound|HEX5[6]~5, DE1_SoC, 1
instance = comp, \KEY[1]~input , KEY[1]~input, DE1_SoC, 1
instance = comp, \KEY[2]~input , KEY[2]~input, DE1_SoC, 1
instance = comp, \KEY[3]~input , KEY[3]~input, DE1_SoC, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, DE1_SoC, 1
